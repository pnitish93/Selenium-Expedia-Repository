package flights;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

/**
 * @author Lenovo
 *
 */
/**
 * @author Lenovo
 *
 */
public class Flights_OneWay {
	WebDriver driver;
	
	@FindBy(id = "tab-flight-tab-hp")
	WebElement flightsTab;
	
	@FindBy(id = "flight-type-one-way-label-hp-flight")
	WebElement oneWayButton;
	
	@FindBy(xpath = "//input[@id='flight-origin-hp-flight']")
	WebElement originCityField;
	
	@FindBy(xpath = "//input[@id='flight-destination-hp-flight']")
	WebElement destinationCityField;
	
	@FindBy(xpath = "//input[@id='flight-departing-single-hp-flight']")
	WebElement departDate;
	
	@FindBy(xpath="(//button[@data-gcw-component=\"gcw-traveler-amount-select\"])[position()=1]")
	WebElement travellers;
	
	@FindBy(xpath="(//button[contains(@class,'action gcw-submit')])[1]")
	WebElement submitBtn;
	
	/**
	 * Constructor
	 * @param driver
	 */
	public Flights_OneWay(WebDriver driver) {
		this.driver = driver;
		PageFactory.initElements(driver, this);
	}
	
	/**
	 * Clicks on flight tab
	 * @return void
	 * @param void
	 */
	public void clickFlightsTab() {
		flightsTab.click();
	}
	
	/**
	 * Clicks on one way button
	 * @return void
	 * @param void
	 */
	public void clickOneWay() {
		oneWayButton.click();
	}
	
	/**
	 * sends origin city
	 * @return void
	 * @param cityValue
	 */
	public void provideOriginCity(String cityValue) {
		originCityField.clear();
		originCityField.sendKeys(cityValue);
		findCity(cityValue, "origin");
	}
	
	public void provideDestCity(String cityValue) {
		destinationCityField.clear();
		destinationCityField.sendKeys(cityValue);
		findCity(cityValue, "destination");
	}
	
	public void findCity(String cityValue, String cityStatus) {
		String cityValueCapital = capitaliseCity(cityValue);
		List<WebElement> cityList = null;
		if(cityStatus.equals("origin")) {
			cityList = driver.findElements(By.xpath("(//div[@class='autocomplete-dropdown'])[1]//li//a"));
		}
		if(cityStatus.equals("destination")){
			cityList = driver.findElements(By.xpath("(//div[@class='autocomplete-dropdown'])[2]//li//a"));
		}
		for(WebElement cityEntry:cityList) {
			if(cityEntry.getAttribute("data-value").contains(cityValueCapital)) {
				System.out.println(cityEntry.getAttribute("data-value"));
				cityEntry.click();
				break;
			}
		}
	}
	
	public String capitaliseCity(String cityValue) {
		char[] cityArray = cityValue.toCharArray();
		for(int i=0; i < cityArray.length; i++) {
			if(i == 0 && cityArray[i] != ' ' || cityArray[i] != ' ' && cityArray[i-1] == ' ') {
				if(cityArray[i] >= 'a' && cityArray[i] <= 'z') {
					cityArray[i] = (char)(cityArray[i]-'a'+'A');
				}
			}
		}
		String capitalised = new String(cityArray);
		return capitalised;
	}
	
	public void provideDepartDate(String date) {
		departDate.clear();
		departDate.sendKeys(date);
		driver.findElement(By.xpath("//div[@class='hero-banner-box siteId-27 cf hideClassicDcol']")).click();
	}
	
	public void clickSubmit() {
		submitBtn.click();
	}
}
